name: Android OSS
on: push
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Install Xamarin
        shell: pwsh
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          # definitions=48 is the id from https://dev.azure.com/xamarin/public/_apis/build/definitions?api-version=6.0 with name Xamarin.Android-OSS
          $latestbuild = (Invoke-WebRequest 'https://dev.azure.com/xamarin/public/_apis/build/builds?api-version=6.0&branchName=refs/heads/master&definitions=48&$top=1&resultFilter=succeeded').Content | ConvertFrom-Json
          $artifacts = (Invoke-WebRequest ($latestbuild.value.url + "/artifacts")).Content | ConvertFrom-Json
          curl -L (($artifacts.value | where {$_.name -eq "Installers - Linux" }).resource.downloadUrl) --output xamarin.zip
          unzip xamarin.zip
          sudo apt install -y "./Installers - Linux/xamarin.android-oss_*_amd64.deb"
      - name: Install Android Sdk (already installed somewhere on Github Actions)
        run: |
          curl -L https://dl.google.com/android/repository/commandlinetools-linux-6858069_latest.zip --output commandlinetools.zip
          unzip commandlinetools.zip
          mkdir sdkroot
          yes | cmdline-tools/bin/sdkmanager --licenses --sdk_root=$PWD/sdkroot
          cmdline-tools/bin/sdkmanager 'build-tools;28.0.3' platform-tools 'platforms;android-28' --sdk_root=$PWD/sdkroot
      - name: Build Apk
        run: |
          # Build and restore Apk
          msbuild /r:True /p:Configuration=Release /p:AndroidSdkDirectory=$PWD/sdkroot/ /t:SignAndroidPackage PKHeX.Android
      - name: Prepare Artifacts
        run: |
          mkdir -p apks
          cp PKHeX.Android/bin/Release/*.apk apks
      - name: Upload Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: apks
          path: apks
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.date.outputs.date }}
          release_name: Nightly ${{ steps.date.outputs.date }}
          draft: false
          prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./apks/com.ProjectPokemon.PKHeX.apk
          asset_name: com.ProjectPokemon.PKHeX.apk
          asset_content_type: application/vnd.android.package-archive
      - name: Upload Release Asset
        id: upload-release-asset2
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./apks/com.ProjectPokemon.PKHeX-Signed.apk
          asset_name: com.ProjectPokemon.PKHeX-Signed.apk
          asset_content_type: application/vnd.android.package-archive
